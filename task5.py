# Дана прямоугольная доска N × M (N строк и M столбцов). В левом верхнем углу находится шахматный конь,
# которого необходимо переместить в правый нижний угол доски. При этом конь может ходить только на две клетки вниз
# и на одну клетку вправо, либо на две клетки вправо и на одну клетку вниз (рисунок для случая 3х3).
# Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

# Входные данные:
# В первой строке входного файла находится два натуральных числа N и M (1 ≤ N, M ≤ 50).

# Выходные данные:
# Вывести единственное число — количество способов добраться конем до правого нижнего угла доски.


def costs_step(n, m):
    a = []
    for i in range(n):
        a.append([0] * m)
    a[0][0] = 1
    for i in range(1, n):
        for j in range(1, m):
            if i - 2 >= 0 and j - 1 >= 0:
                a[i][j] += a[i - 2][j - 1]
            if i - 1 >= 0 and j - 2 >= 0:
                a[i][j] += a[i - 1][j - 2]
    return a[n - 1][m - 1]


if __name__ == '__main__':
    n, m = map(int, input().split())
    assert n >= 1, 'Неправильное количество строк таблицы'
    assert m <= 50, 'Неправильное количество столбцов таблицы'
    costs_step(n, m)
