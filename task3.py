# В некотором государстве в обращении находятся банкноты определенных номиналов. Национальный банк хочет, чтобы
# банкомат выдавал любую запрошенную сумму при помощи минимального числа банкнот, считая, что запас банкнот каждого
# номинала неограничен. Помогите национальному банку решить эту задачу.

# Входные данные:
# Первая строка входных данных содержит натуральное число N, не превосходящее 100 — количество номиналов банкнот
# в обращении. Вторая строка входных данных содержит N различных натуральных чисел x1, x2, ..., xN,
# не превосходящих 10**6 — номиналы банкнот. Третья строчка содержит натуральное число S, не превосходящее 10**6
# — сумму, которую необходимо выдать.

# Выходные данные:
# Программа должна определить представление числа S как сумму элементов из множества xi таким образом,
# чтобы количество элементов в сумме было минимальным. Затем она должна отобразить это представление,
# выведя на экран последовательность элементов, разделенных пробелами. В случае наличия нескольких подходящих
# представлений, программа может вывести любое из них. Если же найти такое представление невозможно, программа
# должна сообщить об этом, выведя сообщение «No solution».


def get_exchange(n, x, s):
    result = [0] * n
    x = sorted(x, reverse=True)
    for num, i in enumerate(x):
        s1, d = divmod(s, i)
        if s1 == 0:
            s = d
            continue
        result[num] = s // i
        s = s - s1 * i
    else:
        if s == 0:
            s1 = ''
            for i in range(n):
                if result[i]:
                    s1 += f'{int(result[i])} - {x[i]}, '
            s1 = s1[:-2]
            return s1
        else:
            return 'No solution'


def assert_input(n, x, s):
    assert n <= 100, "Большое количество элементов"
    assert all([i <= 10**6 for i in x]), "Элементы слишком большие"
    assert n == len(x), "Несовпадение количество номиналов и введенного числа"
    assert s <= 10**6, "Сумма слишком большая"


def set_from_file(path):
    with open(path) as f:
        n = int(f.readline())
        x = list(map(int, f.readline().split()))
        s = float(f.readline())
    assert_input(n, x, s)
    return get_exchange(n, x, s)


def set_from_line():
    n = int(input('Введите количество элементов'))
    x = list(map(int, input('Введите последовательность номиналов: ')))
    s = float(input("Введите сумму для размена: "))
    assert_input(n, x, s)
    return get_exchange(n, x, s)


if __name__ == '__main__':
    print(set_from_file('data.txt'))

